[tool.poetry]
name = "narada"
version = "0.1.1"
description = "Music metadata integration and playlist management platform"
authors = ["Ash Wright <a@ashwright.net>"]
homepage = "https://github.com/w-ash/narada"
readme = "README.md"
license = "MIT"
packages = [{include = "narada"}]

[tool.poetry.dependencies]
python = "^3.13"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.38"}
alembic = "^1.14.1"
httpx = "^0.28.1"  # Modern async HTTP client replacement for requests
spotipy = "^2.25.0"
pylast = "^5.3.0"
musicbrainzngs = "^0.7.1"
loguru = "^0.7.3"
python-dotenv = "^1.0.1"
rich = "^13.7.0"
typer = "^0.15.1"  # Modern CLI framework
attrs = "^25.1.0"
toolz = "^1.0.0"
backoff = "^2.2.1"
prefect = "^3.2.7"
aiosqlite = "^0.21.0"  # Async SQLite support

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"  # Async test support
pytest-cov = "^6.0.0"
black = "^25.1.0"
ruff = "^0.9.9"  # Modern replacement for isort, flake8, etc.
pre-commit = "^4.1.0"

[tool.poetry.scripts]
narada = "narada.cli.app:main"
test-db = "narada.data.test_database:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration for version 0.9.9
[tool.ruff]
# Basic settings
line-length = 88
target-version = "py313"
preview = true

# Linting rules
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "UP",    # pyupgrade - modernize syntax
    "N",     # pep8-naming
    "SIM",   # flake8-simplify
    "RUF",   # Ruff-specific rules
    "C4",    # flake8-comprehensions (optimizes list/dict comprehensions)
    "TCH",   # type-checking (better typing practices)
    "TID",   # tidy imports
    "S",     # flake8-bandit (security checks)
    "PIE",   # flake8-pie (misc. lints for code improvement)
    "PT",    # flake8-pytest-style (for better test patterns)
    "COM",   # flake8-commas (trailing comma usage)
    "DTZ",   # flake8-datetimez (timezone awareness)
    "PERF",  # Performance anti-patterns
    "ERA",   # Eradication of deprecated APIs
    "ASYNC", # Common async/await issues
    "FLY",   # String formatting issues
    "ARG",   # Function argument validation
    "TD003", # Mark TODOs with an assignee
    "PYI",   # Stub file linting
]

ignore = ["E501"]  # Line too long (handled by formatter)
fixable = ["ALL"]
unfixable = []

# Per-file rule exceptions
[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]   # Don't complain about unused imports in __init__ files
"tests/**/*.py" = ["S101"] # Allow assert in tests

# Import sorting configuration
[tool.ruff.isort]
known-first-party = ["narada"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
split-on-trailing-comma = true
lines-between-types = 1
force-single-line = false           # Allow multi-line imports
force-sort-within-sections = true   # Sort within sections
from-first = false                  # Put "from" imports after regular imports
detect-same-package = true          # Similar to grouping by package
order-by-type = true                # Organize by import type

# Python 3.13+ specific settings via pyupgrade
[tool.ruff.pyupgrade]
# Keep typed versions of builtins for better type checking
keep-runtime-typing = true

# Configure typing practices
[tool.ruff.pydocstyle]
convention = "google"

# Formatter configuration (Compatible with Ruff 0.9.9)
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# flake8-annotations settings
[tool.ruff.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true

# flake8-bugbear settings
[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["typer.Argument", "typer.Option"]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"
markers = ["integration: marks tests as integration tests"]

[tool.coverage.run]
source = ["narada"]
omit = ["tests/*"]

[tool.poetry.urls]
"Documentation" = "https://github.com/w-ash/narada/docs"
"Repository" = "https://github.com/w-ash/narada"
"Bug Tracker" = "https://github.com/w-ash/narada/issues"

[tool.typer.app]
name = "narada"
help = "Music metadata integration and playlist management platform"